# Define a class
class ZebraLabel
{
   [string[]] $commands = @()

    # Constructor
    ZebraLabel () {
        $this.New_Label()
    }

    [void] New_Label() {
        $this.commands = @()
        $this.StartZPL()
    }

    [string] Get_Label() {
        return ($this.commands -join("`n"))
    }

    [void] ToPrinter([string] $Name) {
        $Zebra_Printer = Get-Printer -Name $Name
        Out-Printer -Name $Zebra_Printer -InputObject $this.Get_Label()
    }

    [void] ToFile([string] $Name) {
        Out-File -FilePath $Name -InputObject $this.Get_Label() -Append
    }

    [void] StartZPL() {

        $this.commands += "^XA"

    }

    [void] EndZPL() {

        $this.commands += "^XZ"

    }

    [void] Location([Int]$Top,[Int]$Left) {

        $this.commands += ("^FO{0},{1}" -f $Left,$Top)

    }

    [void] SetFont([String]$Font) {

        $this.commands += ("^CF{0}" -f $Font)

    }

    [void] ScaleFont([String]$Font, [Int]$Height, [Int]$Width) {

        $this.commands += ("^A{0},{1},{2}" -f $Font,$Height,$Width)

    }

    [void] Input([String]$Data) {

        $this.commands += ("^FD{0}^FS" -f $Data)

    }

    [void] Text([String]$Text) {

        $this.Input($Text)

    }

    [void] QRCode([Int]$Mode, [Int]$Magnification, [String]$Text) {

        $this.commands += ("^BQN,{0},{1}" -f $Mode,$Magnification)
        $this.Input("QA,$Text")

    }
 

    [void] BC128([Int]$Height, [String]$Print_val, [String]$Print_val_top, [String]$ucc, [String]$Text) {

        $this.commands += ("^BCN,{0},{1},{2},{3}" -f ($Height,$Print_val,$Print_val_top,$ucc))
        $this.Input($Text)

    }

    ## Graphics ##
    [void] Box([Int]$Left, [Int]$Top, [Int]$Width, [Int]$Height, [Int]$Thickness, [String]$Color, [Int]$Rounding) {

        $this.Location($Top,$Left)
        $this.commands += ("^GB{0},{1},{2},{3},{4}^FS" -f ($Width,$Height,$Thickness,$Color,$Rounding))

    }

    [void] Logo([Int]$Top, [Int]$Left, [string]$Logo) {

        $img =  "^FO{0},{1}^GFA{2}:^FS" -f $Left,$Top,$Logo

        $this.commands += $img

    }
}

<#

############
## Settings
############

$label_qr = 1
$label_128 = 0
$to_printer = 0
$out_file = "./zpl.out"
$printer_name = "ZebraLabelTest"
$file = ".\printers.txt"

# The loop will over run the printer queue
# so we need to sleep between calls to print
# This time nees to be adjusted for efficiency
$sleep_time = .25  

$bcQR = [PSCustomObject]@{
    mode  = 2    # enhanced
    mag   = 5   # 1-10
    top   = 20
    left  = 230
    text = [PSCustomObject]@{
        font    = "S"  # OCR All CAPS
        top     = 150
        left    = 110
        scale_h = 36   # Must maintain ratio
        scale_w = 20   # (36/20) (24/15) (18/10) (12/5)
    }
    logo = [PSCustomObject]@{
        draw  = 1
        top   = 20
        left  = 60
        ascii = ",2286,2286,18,,::U01JFE,T03MF,S03NFE,R01IF6119IFC,R0JF739DC3FF8,Q03FF0F719BCCFFE,Q0IFC3798BCJF8,P03F81D1F98F8BFBFE,P0FF78D87C479BF3FFC,O01FF7CDE3CE79BEBFFE,O03FE7CFF3CEF9FDBF7F,O0FDE7CFFBFEF1D89F1F8,N03F9E7EC7JFE371F3FE,N07F8E3DNF39E7FF,N0FFC71DIFC1JF1C7CFC,M01F7C3C7FCJ01FF9CFF7E,M03C1D3FFEL01FF1FF1F,M07F058FFN03F9FE2F8,M0FFA19F8O0FEDE77C,L01EFD1FEP03F3CF7E,L03CFDDF8Q0FF8FDE,L07E7EFFR07E1FCF,L0FE3E7CI0C119B08001F3F878,K01FE87F8I04330908I0FDF1FC,K01FF43FJ0632018J03FC3FE,K03C773C1FFE2520093FFC1F0DDF,K07807F8J031300CK0F9E0F,K07E03FK019300EK03DE3F8,K0FF3BEK0919D04K01FC7F8,J01FFDFCK0C28EN0F8FFC,J01E1C7CW0F9FFE,J03C0EF8W07BFFE,J03BC7LFEL03PF,J07BF7CLFL03PF,J07BF3CLFL03KFDFFC78,J0FBFB87WF8FF078,J0F9FF83WF07C1FC,I01F8E703LF8120MF07C7FC,I01FC0E01LFE003LFE03DFFC,I01FFBE01VFE03DFFE,I03E7FEL03LFEL01DFEE,I03DFFC03JF7QF601DF8E,I03BF7C03JFEL01KF00E4FF,I03BF7803WF00JF,I07BF7803WF00IF7,I07BF78031FE3NFE3FC3007FC7,I078E700787C3OF1F8F0070E78,I0FC0F007C007EL01F001F807FCF8,I0FF1F007JFE1F80FC1KF807F8F8,I0IFE007C007E7FC1FF1F001F803F9F8,I0IFE007C7C7E3FC0FE1F1F0F803F3F8,I0IFE0078FE7E3F80FE1F3F8F803E738,001IFE0078867E1F807E1F30CF803E1DC,001IFC0078867E1F807C1F30CF801CFFC,001FFDC0078867E1F807C1F304F801IFC,001FF9C00F9847EL01F1047C01FFDC,001FC1C00F9847EL01F1047C01C01C,001E07C00F9847E1F807C1F1047C01C01C,001E3FC00F9847E1F807C1F1047C01DFFC,001F8FC00F1047E1F807C1F1047C01IFC,001FE5C00F1047E1F807C1F1043C01FFDC,001FF9C00F1047E1F807C1F1043C01FF1C,001FFDC03F1047E1F807C1F1063E01F81C,001FFDC03F1047E1F807C1F1063E01E0DC,001FFDC03F3047E1F807C1F1063E01E3FC,001E01C03F3047E1F807C1F1023E01F3FC,001E05C03F3047E1F807C1F1023E01FCDC,001EFFC03F3047E1F807C1F1023E01FF1C,001IFE03F2047E1F807E1F1023E03FFDC,I0FFDE03E2047E1F807E1F9023E03IFC,I0E81E07E2047E1F807E1F9021F038FF8,I0E73E07E2047E1F80FE1F9021F038038,I0EF3F07E6047E1F80FE1F9031F03B838,I0FE7F07E6047E1F80FE1F9031F07IB8,I07CF707E6047E3F80FE1F9031F0733F8,I078F787E6047E3F80FE1F9031F07BF7,I0791787E6047E3F80FE1F9011F8FFE7,I078FF87E6047E3F80FE1F9019F8E7FF,I03BFBCFC6047E3F80FE1F9019F8E1FF,I03FF9CFC4047E3F80FE1F9018F9C07E,I03FE1EFC4047E3F80FE1F9018F9FC0E,I01F87EFC4047E3F80FE1F9018FBF19E,I01E0FEFCC047E3F80FE1F9018FBC1DC,I01E3IFCC047E3F80FE1F901CFF81DC,J0FF87FCC047E3F80FE1F901CIFC3C,J0FF03FCFFC7E3F80FE1F9FFCFF7E78,J07FBFFCFFC7EL01F9FFCFE7FF8,J07DFDFCI07EL01F8I0FDIF,J03DFDF8I07EL01F8I0FDC3F,J03DF9F8I07CM0F8I07D83E,J01DF1F8W0FE1DE,K0E037CW0F77BC,K0F8F3EK01F8F9CK01E3C78,K07FF7FL0CC64CK03D1FF8,K07FE778K0CC64CK0FF8FF,K03F043EK0CC64CJ03F7E1E,K01F307F001FCF878CFE007EFF3E,K01F70EF8J0DC60CJ0FC7F3C,L0FA3E7CJ0CC60CI01FA3FF8,L0787C3FJ0C660CI03FF1DF,L03CFCFF8Q0IF8DE,L03EF9FFEP03F7FC3E,L01FF1FBF8O0FE7FE7C,M0FC3F3FEN03FC7FEF8,M07C7C3FFCM0IF3F5F,M01F7B3IFCK0JF0FBE,M01FEF3JFE003KFC1FC,N07EF3TF1F8,N03FF3NFCKF3E,O0FE3FBF8E1EI7F3F9FC,O03F7F3FCDCD377F3FBF,O01FBFBFDDEF307FBFFE,P0KFDC5F783JFC,P03JF9C1E383IFE,Q0JF990F93BIFC,Q03IF99EF93BIF,R0IF19CFB87FF8,R03IFE1C7IFE,S03OF,T03MF,U03JFE,,::"
    }
    #"^FO10,210^GB385,2,2^FS"
    line = [PSCustomObject]@{
        draw      = 1
        top       = 10
        left      = 210
        width     = 385
        height    = 2
        thickness = 2
        color     = "B" # W/B
        rounding  = 0   # 0-8
    }
}


#>